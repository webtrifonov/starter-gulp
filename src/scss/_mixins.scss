//font
@mixin font-face($family, $path: '../fonts/', $weight: normal, $style: normal) {
  @font-face {
    font-family: $family;
    src: url('#{$path}.eot');
    src: url('#{$path}.eot?#iefix') format('embedded-opentype'),
         url('#{$path}.woff2') format('woff2'),
         url('#{$path}.woff') format('woff'),
         url('#{$path}.ttf') format('truetype'),
         url('#{$path}.svg#FiraSans-Medium') format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}
@mixin font($family, $size, $weight: normal, $style: normal) {
  font-family: $family;
  font-size: #{$size}px;
  font-weight: $weight;
  font-style: $style;
}
@function rem($px, $root: 16px) {
  @return ('#{$px}px' / $root) * 1rem;
}
@mixin fontem($family, $size, $weight: normal, $style: normal) {
  font-family: $family;
  font-size: rem($size);
  font-weight: $weight;
  font-style: $style;
}

@mixin border($color, $size: 1px, $style: solid) {
  border: {
    width: $size;
    style: $style;
    color: $color;
  }
}
@mixin button-template {
.button {
  display: inline-block;
  border: none;
  outline: none;
  color: #FFFFFF;
  text-decoration: none;
  background-color: $accent;
  padding: 15px 45px;
  font-size: 13px;
  text-transform: uppercase;
  font-weight: 600;
  letter-spacing: 3px;
  border-radius: 2px;
  text-align: center;
  transition: background-color .1s ease;
  cursor: pointer;
  position: relative;
  &:after {
    transition: background-color .2s ease;
    position: absolute;
    content: '';
    height: 4px;
    bottom: 0;
    width: 100%;
    background-color: darken($accent, 50%);
    opacity: .18;
    border-bottom-left-radius: 2px;
    border-bottom-right-radius: 2px;
    left: 0;
  }
  &:focus, &:hover {
    text-decoration: none;
    color: #FFFFFF;
  }
  &:hover {
    background-color: lighten($accent, 5%);
    &:after {
      opacity: .22;
    }
  }
  &:active {
    background-color: darken($accent, 5%);
    &:after {
      opacity: .32;
    }
  }
}
}

//https://habr.com/ru/post/310186/ - резиновые шрифты
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}
@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
  $f-min: strip-unit($f-min);
  $f-max: strip-unit($f-max);
  $w-min: strip-unit($w-min);
  $w-max: strip-unit($w-max);
  $k: ($f-max - $f-min)/($w-max - $w-min);
  $b: $f-min - $k * $w-min;
  $b: $b + $units;
  @return calc( #{$k} * 100vw + #{$b} );
}

@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false) {
  font-size: $f-min;
  @media (min-width: $w-min) {
    @if ($fallback) {
      font-size: $fallback;
    }
    font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
  }
  @media (min-width: $w-max) {
    font-size: $f-max;
  }
}